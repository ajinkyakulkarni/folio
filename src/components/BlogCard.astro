---
export interface Props {
  title: string;
  slug: string;
  description: string;
  author: string;
  authorSlug: string;
  publishDate: Date;
  category: string;
  tags: string[];
  heroImage?: string;
  featured?: boolean;
  readingTime?: number;
}

const baseUrl = import.meta.env.BASE_URL;

const { 
  title, 
  slug, 
  description, 
  author, 
  authorSlug,
  publishDate, 
  category, 
  tags, 
  heroImage,
  featured = false,
  readingTime
} = Astro.props;

const formattedDate = publishDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<article class={`bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow overflow-hidden ${featured ? 'ring-2 ring-indigo-500' : ''}`}>
  {heroImage && (
    <a href={`${baseUrl}blog/${slug}`}>
      <img
        src={heroImage}
        alt={title}
        class="w-full h-48 object-cover"
      />
    </a>
  )}
  <div class="p-6">
    {featured && (
      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 mb-2">
        Featured
      </span>
    )}
    <h3 class="text-xl font-semibold mb-2">
      <a href={`${baseUrl}blog/${slug}`} class="text-gray-900 hover:text-indigo-600">
        {title}
      </a>
    </h3>
    <p class="text-gray-700 mb-4 line-clamp-3">{description}</p>
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center space-x-2">
        <a href={`${baseUrl}authors/${authorSlug}`} class="text-sm font-medium text-gray-900 hover:text-indigo-600">
          {author}
        </a>
        <span class="text-gray-500">·</span>
        <time datetime={publishDate.toISOString()} class="text-sm text-gray-500">
          {formattedDate}
        </time>
        {readingTime && (
          <>
            <span class="text-gray-500">·</span>
            <span class="text-sm text-gray-500">{readingTime} min read</span>
          </>
        )}
      </div>
    </div>
    <div class="flex items-center justify-between">
      <a href={`${baseUrl}categories/${category}`} class="text-sm text-indigo-600 hover:text-indigo-800">
        {category}
      </a>
      <div class="flex flex-wrap gap-2">
        {tags.slice(0, 3).map(tag => (
          <a
            href={`${baseUrl}tags/${tag}`}
            class="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded hover:bg-gray-200"
          >
            #{tag}
          </a>
        ))}
      </div>
    </div>
  </div>
</article>