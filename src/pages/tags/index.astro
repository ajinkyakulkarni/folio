---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const baseUrl = import.meta.env.BASE_URL;

const allPosts = await getCollection('blog', ({ data }) => !data.draft);

// Collect all tags with post counts
const tagCounts = new Map();
allPosts.forEach(post => {
  post.data.tags.forEach(tag => {
    tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
  });
});

// Sort tags by usage count (descending)
const sortedTags = Array.from(tagCounts.entries())
  .sort((a, b) => b[1] - a[1]);

// Group tags by size for cloud effect
const getTagSize = (count: number) => {
  if (count >= 5) return 'text-3xl';
  if (count >= 3) return 'text-2xl';
  if (count >= 2) return 'text-xl';
  return 'text-lg';
};

const getTagColor = (count: number) => {
  if (count >= 5) return 'text-indigo-800';
  if (count >= 3) return 'text-indigo-600';
  if (count >= 2) return 'text-indigo-500';
  return 'text-indigo-400';
};
---

<BaseLayout title="Tags">
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Explore by Tags</h1>
      <p class="text-lg text-gray-600">
        Discover articles by topic. Click any tag to see related content.
      </p>
    </div>
    
    <!-- View Toggle -->
    <div class="flex justify-center mb-6">
      <div class="inline-flex rounded-lg border border-gray-200 bg-white p-1">
        <button
          id="cloud-view-btn"
          class="px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-500 hover:text-gray-700"
          data-view="cloud"
        >
          Cloud View
        </button>
        <button
          id="list-view-btn"
          class="px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-500 hover:text-gray-700"
          data-view="list"
        >
          List View
        </button>
      </div>
    </div>
    
    <!-- Tag Cloud View -->
    <div id="cloud-view" class="view-container">
      <div class="bg-white rounded-lg shadow-md p-8 mb-8">
        <h2 class="text-2xl font-semibold mb-6 text-center">Tag Cloud</h2>
        <div class="flex flex-wrap justify-center gap-3">
          {sortedTags.map(([tag, count]) => (
            <a
              href={`${baseUrl}tags/${tag}`}
              class={`inline-block px-3 py-1 rounded-full hover:bg-indigo-100 transition-colors ${getTagSize(count)} ${getTagColor(count)} font-medium`}
              style={`transform: rotate(${Math.random() * 10 - 5}deg)`}
            >
              #{tag}
              <span class="text-sm opacity-75 ml-1">({count})</span>
            </a>
          ))}
        </div>
      </div>
    </div>
    
    <!-- List View -->
    <div id="list-view" class="view-container hidden">
      <div class="bg-white rounded-lg shadow-md p-8">
        <h2 class="text-2xl font-semibold mb-6">All Tags</h2>
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {sortedTags.map(([tag, count]) => (
            <a
              href={`${baseUrl}tags/${tag}`}
              class="flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:border-indigo-300 hover:bg-indigo-50 transition-colors group"
            >
              <div class="flex items-center">
                <span class="text-indigo-600 font-medium group-hover:text-indigo-800">
                  #{tag}
                </span>
              </div>
              <span class="bg-indigo-100 text-indigo-700 px-2 py-1 rounded-full text-sm font-medium">
                {count} {count === 1 ? 'post' : 'posts'}
              </span>
            </a>
          ))}
        </div>
      </div>
    </div>
    
  </div>
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cloudViewBtn = document.getElementById('cloud-view-btn');
    const listViewBtn = document.getElementById('list-view-btn');
    const cloudView = document.getElementById('cloud-view');
    const listView = document.getElementById('list-view');
    
    // Set initial active state
    cloudViewBtn?.classList.add('bg-indigo-600', 'text-white');
    cloudViewBtn?.classList.remove('text-gray-500');
    
    // Get saved preference from localStorage
    const savedView = localStorage.getItem('preferredTagView') || 'cloud';
    if (savedView === 'list') {
      showListView();
    } else {
      showCloudView();
    }
    
    cloudViewBtn?.addEventListener('click', () => {
      showCloudView();
    });
    
    listViewBtn?.addEventListener('click', () => {
      showListView();
    });
    
    function showCloudView() {
      cloudView?.classList.remove('hidden');
      listView?.classList.add('hidden');
      // Update button styles
      cloudViewBtn?.classList.add('bg-indigo-600', 'text-white');
      cloudViewBtn?.classList.remove('text-gray-500');
      listViewBtn?.classList.remove('bg-indigo-600', 'text-white');
      listViewBtn?.classList.add('text-gray-500');
      localStorage.setItem('preferredTagView', 'cloud');
    }
    
    function showListView() {
      listView?.classList.remove('hidden');
      cloudView?.classList.add('hidden');
      // Update button styles
      listViewBtn?.classList.add('bg-indigo-600', 'text-white');
      listViewBtn?.classList.remove('text-gray-500');
      cloudViewBtn?.classList.remove('bg-indigo-600', 'text-white');
      cloudViewBtn?.classList.add('text-gray-500');
      localStorage.setItem('preferredTagView', 'list');
    }
  });
</script>